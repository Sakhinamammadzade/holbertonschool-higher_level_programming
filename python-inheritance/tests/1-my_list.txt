# Import the module
>>> MyList = __import__('1-my_list').MyList

# Check print_sorted with empty list
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

# Basic operations and error handling
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

# Sorting pre-sorted list
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> print(my_list)
[1, 2, 3]
>>> my_list.print_sorted()
[1, 2, 3]

# Handling negative numbers and mixed types
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> print(my_list)
[-1, -4, -2, -3, -5]
>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

# Handling strings and mixed types
>>> my_list = MyList()
>>> my_list.append("hello")
>>> my_list.append(7)
>>> print(my_list)
['hello', 7]
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: unorderable types: int() < str()

# Error handling for invalid operations
>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list[0] = (2)
>>> print(my_list)
[2]
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.remove(1)
>>> print(my_list)
[]
>>> my_list = MyList()
>>> my_list.append("hello")
>>> my_list.append(7)
>>> print(my_list)
['hello', 7]
>>> type(MyList.__dict__['print_sorted'])
<class 'function'>
